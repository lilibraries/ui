@import "@lilib/themes";

.#{$cls-prefix}tag {
  @include reset;

  display: inline-flex;
  flex: none;
  align-items: center;
  box-sizing: border-box;
  max-width: 100%;
  height: calc(var(--font-size-base) * var(--line-height-base));
  color: var(--text-color-base);
  font-weight: var(--font-weight-base);
  font-size: var(--font-size-base);
  background-color: var(--background-color-base);
  border: 1px solid var(--border-color-base);
  border-radius: var(--border-radius-fixed-small);
  @include feedback(color, border-color, background-color);

  &-icon {
    display: inline-flex;
    flex: none;
    align-items: center;
    justify-content: center;
    width: calc(var(--font-size-base) * var(--line-height-base));
    height: calc(var(--font-size-base) * var(--line-height-base));
    margin-inline-start: -1px;
    overflow: hidden;
    border-radius: var(--border-radius-fixed-small) 0 0 var(--border-radius-fixed-small);

    & > img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }

    & > .#{$cls-prefix}avatar {
      width: 100%;
      height: 100%;
      border-radius: 0;

      & img {
        border-radius: 0;
      }
    }
  }

  &-content {
    flex: 1 1 auto;
    padding: 0 0.5em;
    text-align: center;
    @include text-overflow;

    & + .#{$cls-prefix}tag-clear {
      margin-inline-start: -0.25em;
    }
  }

  &-clear.#{$cls-prefix}button {
    display: inline-flex;
    flex: none;
    align-items: center;
    justify-content: center;
    width: calc(var(--font-size-base) * var(--line-height-base));
    height: calc(var(--font-size-base) * var(--line-height-base));
    padding: 0;
    color: var(--text-color-muted);
    font-size: var(--font-size-smaller);
    border-radius: 0 var(--border-radius-fixed-small) var(--border-radius-fixed-small) 0;
    margin-inline-end: -1px;

    &:hover {
      color: var(--text-color-hover);
    }

    &:active {
      color: var(--text-color-active);
    }

    &[disabled] {
      color: var(--text-color-muted);
    }

    &.#{$cls-prefix}disabled {
      color: var(--text-color-disabled);
    }
  }

  &.#{$cls-prefix}small {
    height: calc(var(--font-size-small) * var(--line-height-base));
    font-size: var(--font-size-small);

    & > .#{$cls-prefix}tag-icon {
      width: calc(var(--font-size-small) * var(--line-height-base));
      height: calc(var(--font-size-small) * var(--line-height-base));
    }

    & > .#{$cls-prefix}tag-clear.#{$cls-prefix}button {
      width: calc(var(--font-size-small) * var(--line-height-base));
      height: calc(var(--font-size-small) * var(--line-height-base));
    }
  }

  &.#{$cls-prefix}large {
    height: calc(var(--font-size-large) * var(--line-height-base));
    font-size: var(--font-size-large);

    & > .#{$cls-prefix}tag-icon {
      width: calc(var(--font-size-large) * var(--line-height-base));
      height: calc(var(--font-size-large) * var(--line-height-base));
    }

    & > .#{$cls-prefix}tag-clear.#{$cls-prefix}button {
      width: calc(var(--font-size-large) * var(--line-height-base));
      height: calc(var(--font-size-large) * var(--line-height-base));
    }
  }

  &.#{$cls-prefix}rounded {
    border-radius: var(--border-radius-round);

    & > .#{$cls-prefix}tag-icon {
      border-radius: var(--border-radius-round);
    }

    & > .#{$cls-prefix}tag-clear.#{$cls-prefix}button {
      border-radius: var(--border-radius-round);
    }
  }

  &.#{$cls-prefix}squared {
    font-family: var(--font-family-mono);

    & > .#{$cls-prefix}tag-content {
      min-width: calc(var(--font-size-base) * var(--line-height-base) - 2px);
      padding: 0 0.25em;
    }

    &.#{$cls-prefix}small {
      & > .#{$cls-prefix}tag-content {
        min-width: calc(var(--font-size-small) * var(--line-height-base) - 2px);
      }
    }

    &.#{$cls-prefix}large {
      & > .#{$cls-prefix}tag-content {
        min-width: calc(var(--font-size-large) * var(--line-height-base) - 2px);
      }
    }
  }

  &.#{$cls-prefix}hoverable:not(.#{$cls-prefix}disabled) {
    cursor: pointer;

    &:hover {
      color: var(--text-color-hover);
      background-color: var(--background-color-hover);
      border-color: var(--border-color-hover);
    }

    &:active {
      color: var(--text-color-active);
      background-color: var(--background-color-active);
      border-color: var(--border-color-active);
    }

    [data-focusing] &:focus {
      @include focus-outline;
    }
  }

  &.#{$cls-prefix}disabled {
    color: var(--text-color-disabled);
    background-color: var(--background-color-disabled);
    border-color: var(--border-color-disabled);
    cursor: not-allowed;

    &[href] {
      pointer-events: none;
    }
  }

  @each $color in $colors {
    &.#{$cls-prefix}#{$color} {
      color: var(--text-color-#{$color}-base);
      background-color: var(--background-color-#{$color}-base);
      border-color: var(--border-color-#{$color}-base);

      &.#{$cls-prefix}hoverable:not(.#{$cls-prefix}disabled) {
        &:hover {
          color: var(--text-color-#{$color}-hover);
          background-color: var(--background-color-#{$color}-hover);
          border-color: var(--border-color-#{$color}-hover);
        }

        &:active {
          color: var(--text-color-#{$color}-active);
          background-color: var(--background-color-#{$color}-active);
          border-color: var(--border-color-#{$color}-active);
        }
      }

      &.#{$cls-prefix}disabled {
        color: var(--text-color-#{$color}-disabled);
        background-color: var(--background-color-#{$color}-disabled);
        border-color: var(--border-color-#{$color}-disabled);
      }
    }
  }
}

.#{$cls-prefix}tag.#{$cls-prefix}solid {
  color: var(--text-color-reverse-base);
  background-color: var(--background-color-solid-base);
  border-color: var(--border-color-solid-base);

  & > .#{$cls-prefix}tag-clear.#{$cls-prefix}button {
    color: var(--text-color-reverse-base);
    background-color: transparent;

    &:hover {
      color: var(--text-color-reverse-hover);
      background-color: rgba($white, var(--alpha-base));
    }

    &:active {
      color: var(--text-color-reverse-active);
      background-color: rgba($white, var(--alpha-deep));
    }

    &[disabled] {
      color: var(--text-color-reverse-base);
      background-color: transparent;
    }

    &.#{$cls-prefix}disabled {
      color: var(--text-color-reverse-disabled);
      background-color: transparent;
    }
  }

  &.#{$cls-prefix}hoverable:not(.#{$cls-prefix}disabled) {
    &:hover {
      color: var(--text-color-reverse-hover);
      background-color: var(--background-color-solid-hover);
      border-color: var(--border-color-solid-hover);
    }

    &:active {
      color: var(--text-color-reverse-active);
      background-color: var(--background-color-solid-active);
      border-color: var(--border-color-solid-active);
    }
  }

  &.#{$cls-prefix}disabled {
    color: var(--text-color-reverse-disabled);
    background-color: var(--background-color-solid-disabled);
    border-color: var(--border-color-solid-disabled);
  }

  @each $color in $colors {
    &.#{$cls-prefix}#{$color} {
      color: var(--text-color-solid-base);
      background-color: var(--background-color-#{$color}-solid-base);
      border-color: var(--border-color-#{$color}-solid-base);

      & > .#{$cls-prefix}tag-clear.#{$cls-prefix}button {
        color: var(--text-color-solid-base);

        &:hover {
          color: var(--text-color-solid-hover);
        }

        &:active {
          color: var(--text-color-solid-active);
        }

        &[disabled] {
          color: var(--text-color-solid-base);
        }

        &.#{$cls-prefix}disabled {
          color: var(--text-color-solid-disabled);
        }
      }

      &.#{$cls-prefix}hoverable:not(.#{$cls-prefix}disabled) {
        &:hover {
          color: var(--text-color-solid-hover);
          background-color: var(--background-color-#{$color}-solid-hover);
          border-color: var(--border-color-#{$color}-solid-hover);
        }

        &:active {
          color: var(--text-color-solid-active);
          background-color: var(--background-color-#{$color}-solid-active);
          border-color: var(--border-color-#{$color}-solid-active);
        }
      }

      &.#{$cls-prefix}disabled {
        color: var(--text-color-solid-disabled);
        background-color: var(--background-color-#{$color}-solid-disabled);
        border-color: var(--border-color-#{$color}-solid-disabled);
      }
    }
  }
}

.#{$cls-prefix}tag.#{$cls-prefix}hollow {
  background-color: transparent;

  &.#{$cls-prefix}hoverable:not(.#{$cls-prefix}disabled) {
    &:hover {
      background-color: rgba(var(--basis-rgb) / var(--alpha-base));
    }

    &:active {
      background-color: rgba(var(--basis-rgb) / var(--alpha-deep));
    }
  }

  &.#{$cls-prefix}disabled {
    background-color: transparent;
  }

  @each $color in $colors {
    &.#{$cls-prefix}#{$color} {
      color: var(--text-color-#{$color}-base);

      &.#{$cls-prefix}hoverable:not(.#{$cls-prefix}disabled) {
        &:hover {
          color: var(--text-color-#{$color}-hover);
          background-color: rgba(var(--#{$color}-rgb) / var(--alpha-base));
        }

        &:active {
          color: var(--text-color-#{$color}-active);
          background-color: rgba(var(--#{$color}-rgb) / var(--alpha-deep));
        }
      }

      &.#{$cls-prefix}disabled {
        color: var(--text-color-#{$color}-disabled);
        background-color: transparent;
      }
    }
  }
}

.#{$cls-prefix}tag.#{$cls-prefix}borderless {
  border-color: transparent;

  &.#{$cls-prefix}hoverable:not(.#{$cls-prefix}disabled) {
    &:hover {
      border-color: transparent;
    }

    &:active {
      border-color: transparent;
    }
  }

  &.#{$cls-prefix}disabled {
    border-color: transparent;
  }

  @each $color in $colors {
    &.#{$cls-prefix}#{$color} {
      border-color: transparent;

      &.#{$cls-prefix}hoverable:not(.#{$cls-prefix}disabled) {
        &:hover {
          border-color: transparent;
        }

        &:active {
          border-color: transparent;
        }
      }

      &.#{$cls-prefix}disabled {
        border-color: transparent;
      }
    }
  }
}

.#{$cls-prefix}tag.#{$cls-prefix}rtl {
  & > .#{$cls-prefix}tag-icon {
    border-radius: 0 var(--border-radius-fixed-small) var(--border-radius-fixed-small) 0;
  }

  & > .#{$cls-prefix}tag-clear.#{$cls-prefix}button {
    border-radius: var(--border-radius-fixed-small) 0 0 var(--border-radius-fixed-small);
  }

  &.#{$cls-prefix}rounded {
    & > .#{$cls-prefix}tag-icon,
    & > .#{$cls-prefix}tag-clear.#{$cls-prefix}button {
      border-radius: var(--border-radius-round);
    }
  }
}
