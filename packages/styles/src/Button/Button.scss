@import "@lilib/themes";

.#{$cls-prefix}button {
  @include reset;

  display: inline-flex;
  align-items: center;
  box-sizing: border-box;
  max-width: 100%;
  padding: var(--space-block-base) var(--space-inline-base);
  color: var(--text-color-base);
  font-weight: var(--font-weight-button);
  font-size: var(--font-size-base);
  line-height: var(--line-height-fixed-base);
  text-align: start;
  vertical-align: middle;
  background-color: var(--background-color-base);
  border: 1px solid var(--border-color-base);
  border-radius: var(--border-radius-base);
  cursor: pointer;
  user-select: none;
  @include feedback(fast, ease, color, border-color, background-color);

  &-content {
    flex: 1 1 0;
  }

  &-loader {
    display: none;
  }

  & > .#{$cls-prefix}icon,
  & > .#{$cls-prefix}spinner {
    flex: 0 0 auto;

    &.#{$cls-prefix}start-spaced {
      margin-inline-start: var(--space-block-base);
    }

    &.#{$cls-prefix}end-spaced {
      margin-inline-end: var(--space-block-base);
    }
  }

  & > .#{$cls-prefix}spinner:not(.#{$cls-prefix}contained) {
    &.#{$cls-prefix}transition {
      &-enter,
      &-exit,
      &-exiting {
        margin-inline-start: 0;
        margin-inline-end: 0;
      }
    }
  }

  &.#{$cls-prefix}small {
    padding: var(--space-block-small) var(--space-inline-small);
    font-size: var(--font-size-small);
    line-height: var(--line-height-fixed-small);

    & > .#{$cls-prefix}icon,
    & > .#{$cls-prefix}spinner {
      &.#{$cls-prefix}start-spaced {
        margin-inline-start: var(--space-block-small);
      }

      &.#{$cls-prefix}end-spaced {
        margin-inline-end: var(--space-block-small);
      }
    }
  }

  &.#{$cls-prefix}large {
    padding: var(--space-block-large) var(--space-inline-large);
    font-size: var(--font-size-large);
    line-height: var(--line-height-fixed-large);

    & > .#{$cls-prefix}icon,
    & > .#{$cls-prefix}spinner {
      &.#{$cls-prefix}start-spaced {
        margin-inline-start: var(--space-block-large);
      }

      &.#{$cls-prefix}end-spaced {
        margin-inline-end: var(--space-block-large);
      }
    }
  }

  &.#{$cls-prefix}round {
    border-radius: var(--border-radius-round);
  }

  &.#{$cls-prefix}fluid {
    display: flex;
    width: 100%;
    margin: auto;
    text-align: center;
  }

  &.#{$cls-prefix}truncated {
    & > .#{$cls-prefix}button-content {
      @include text-overflow;
    }
  }

  &.#{$cls-prefix}icon-only {
    padding: var(--space-block-base);
    line-height: 1;

    &.#{$cls-prefix}small {
      padding: var(--space-block-small);
    }

    &.#{$cls-prefix}large {
      padding: var(--space-block-large);
    }
  }

  &.#{$cls-prefix}loading {
    position: relative;

    & > .#{$cls-prefix}icon,
    & > .#{$cls-prefix}button-content {
      @include transition(base, ease, opacity);
    }

    &.#{$cls-prefix}transition {
      &-exit,
      &-exiting,
      &-exited {
        & > .#{$cls-prefix}icon,
        & > .#{$cls-prefix}button-content {
          opacity: 0;
        }
      }
    }

    & > .#{$cls-prefix}button-loader {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      display: flex;
      align-items: center;
      justify-content: center;
      @include transition(base, ease, opacity);

      &.#{$cls-prefix}transition {
        &-enter,
        &-exit,
        &-exiting,
        &-exited {
          opacity: 0;
        }
      }
    }
  }

  [#{$focusing-attribute}] &:focus {
    @include focus-outline;
  }

  &:hover {
    color: var(--text-color-hover);
    background-color: var(--background-color-hover);
    border-color: var(--border-color-hover);
  }

  &:active {
    color: var(--text-color-active);
    background-color: var(--background-color-active);
    border-color: var(--border-color-active);
  }

  &[disabled] {
    color: var(--text-color-base);
    background-color: var(--background-color-base);
    border-color: var(--border-color-base);
    cursor: default;

    &[href] {
      pointer-events: none;
    }
  }

  &.#{$cls-prefix}active {
    color: var(--text-color-active);
    background-color: var(--background-color-active);
    border-color: var(--border-color-active);
  }

  &.#{$cls-prefix}disabled {
    color: var(--text-color-disabled);
    background-color: var(--background-color-disabled);
    border-color: var(--border-color-disabled);
    cursor: not-allowed;

    &.#{$cls-prefix}active {
      color: var(--text-color-inactive);
      background-color: var(--background-color-inactive);
      border-color: var(--border-color-inactive);
    }
  }

  @each $prefer in join($colors, $intents) {
    &.#{$cls-prefix}#{$prefer} {
      background-color: var(--background-color-#{$prefer}-base);
      border-color: var(--border-color-#{$prefer}-base);

      &:hover {
        background-color: var(--background-color-#{$prefer}-hover);
        border-color: var(--border-color-#{$prefer}-hover);
      }

      &:active {
        background-color: var(--background-color-#{$prefer}-active);
        border-color: var(--border-color-#{$prefer}-active);
      }

      &[disabled] {
        background-color: var(--background-color-#{$prefer}-base);
        border-color: var(--border-color-#{$prefer}-base);
      }

      &.#{$cls-prefix}active {
        background-color: var(--background-color-#{$prefer}-active);
        border-color: var(--border-color-#{$prefer}-active);
      }

      &.#{$cls-prefix}disabled {
        background-color: var(--background-color-#{$prefer}-disabled);
        border-color: var(--border-color-#{$prefer}-disabled);

        &.#{$cls-prefix}active {
          background-color: var(--background-color-#{$prefer}-inactive);
          border-color: var(--border-color-#{$prefer}-inactive);
        }
      }
    }
  }
}

.#{$cls-prefix}button.#{$cls-prefix}solid {
  color: var(--text-color-solid-base);
  background-color: var(--background-color-solid-base);
  border-color: var(--border-color-solid-base);

  &:hover {
    color: var(--text-color-solid-hover);
    background-color: var(--background-color-solid-hover);
    border-color: var(--border-color-solid-hover);
  }

  &:active {
    color: var(--text-color-solid-active);
    background-color: var(--background-color-solid-active);
    border-color: var(--border-color-solid-active);
  }

  &[disabled] {
    color: var(--text-color-solid-base);
    background-color: var(--background-color-solid-base);
    border-color: var(--border-color-solid-base);
  }

  &.#{$cls-prefix}active {
    color: var(--text-color-solid-active);
    background-color: var(--background-color-solid-active);
    border-color: var(--border-color-solid-active);
  }

  &.#{$cls-prefix}disabled {
    color: var(--text-color-solid-disabled);
    background-color: var(--background-color-solid-disabled);
    border-color: var(--border-color-solid-disabled);

    &.#{$cls-prefix}active {
      color: var(--text-color-solid-inactive);
      background-color: var(--background-color-solid-inactive);
      border-color: var(--border-color-solid-inactive);
    }
  }

  @each $prefer in join($colors, $intents) {
    &.#{$cls-prefix}#{$prefer} {
      color: var(--text-color-solid-base);
      background-color: var(--background-color-#{$prefer}-solid-base);
      border-color: var(--border-color-#{$prefer}-solid-base);

      &:hover {
        color: var(--text-color-solid-hover);
        background-color: var(--background-color-#{$prefer}-solid-hover);
        border-color: var(--border-color-#{$prefer}-solid-hover);
      }

      &:active {
        color: var(--text-color-solid-active);
        background-color: var(--background-color-#{$prefer}-solid-active);
        border-color: var(--border-color-#{$prefer}-solid-active);
      }

      &[disabled] {
        color: var(--text-color-solid-base);
        background-color: var(--background-color-#{$prefer}-solid-base);
        border-color: var(--border-color-#{$prefer}-solid-base);
      }

      &.#{$cls-prefix}active {
        color: var(--text-color-solid-active);
        background-color: var(--background-color-#{$prefer}-solid-active);
        border-color: var(--border-color-#{$prefer}-solid-active);
      }

      &.#{$cls-prefix}disabled {
        color: var(--text-color-solid-disabled);
        background-color: var(--background-color-#{$prefer}-solid-disabled);
        border-color: var(--border-color-#{$prefer}-solid-disabled);

        &.#{$cls-prefix}active {
          color: var(--text-color-solid-inactive);
          background-color: var(--background-color-#{$prefer}-solid-inactive);
          border-color: var(--border-color-#{$prefer}-solid-inactive);
        }
      }
    }
  }
}

.#{$cls-prefix}button.#{$cls-prefix}hollow {
  background-color: transparent;

  &:hover {
    background-color: rgba(var(--basis-rgb) / var(--alpha-base));
  }

  &:active {
    background-color: rgba(var(--basis-rgb) / var(--alpha-deep));
  }

  &[disabled] {
    background-color: transparent;
  }

  &.#{$cls-prefix}active {
    background-color: rgba(var(--basis-rgb) / var(--alpha-deep));
  }

  &.#{$cls-prefix}disabled {
    background-color: transparent;

    &.#{$cls-prefix}active {
      background-color: rgba(var(--basis-rgb) / var(--alpha-base));
    }
  }

  @each $prefer in join($colors, $intents) {
    &.#{$cls-prefix}#{$prefer} {
      color: var(--text-color-#{$prefer}-base);
      background-color: transparent;

      &:hover {
        color: var(--text-color-#{$prefer}-hover);
        background-color: rgba(var(--#{$prefer}-rgb) / var(--alpha-base));
      }

      &:active {
        color: var(--text-color-#{$prefer}-active);
        background-color: rgba(var(--#{$prefer}-rgb) / var(--alpha-deep));
      }

      &[disabled] {
        color: var(--text-color-#{$prefer}-base);
        background-color: transparent;
      }

      &.#{$cls-prefix}active {
        color: var(--text-color-#{$prefer}-active);
        background-color: rgba(var(--#{$prefer}-rgb) / var(--alpha-deep));
      }

      &.#{$cls-prefix}disabled {
        color: var(--text-color-#{$prefer}-disabled);
        background-color: transparent;

        &.#{$cls-prefix}active {
          color: var(--text-color-#{$prefer}-inactive);
          background-color: rgba(var(--#{$prefer}-rgb) / var(--alpha-base));
        }
      }
    }
  }
}

.#{$cls-prefix}button.#{$cls-prefix}borderless {
  &,
  &.#{$cls-prefix}solid,
  &.#{$cls-prefix}hollow {
    border-color: transparent;

    &:hover,
    &:active,
    &[disabled],
    &.#{$cls-prefix}active,
    &.#{$cls-prefix}disabled,
    &.#{$cls-prefix}disabled.#{$cls-prefix}active {
      border-color: transparent;
    }
  }
}
