@import "@lilib/themes";

.#{$cls-prefix}menu-item {
  &-popup {
    &.#{$cls-prefix}popup {
      padding: var(--space-1) 0;
    }
  }

  &-collapse-icon {
    @include transition(fast, ease-in-out, transform);

    &.#{$cls-prefix}reverse {
      transform: rotate3d(1, 0, 0, 180deg);
    }
  }

  &-collapse-button {
    &.#{$cls-prefix}button {
      width: 1.5em;
      height: 1.5em;
      padding: 0;
      text-align: center;
      border-radius: var(--border-radius-small);
    }
  }

  &.#{$cls-prefix}list-item {
    &.#{$cls-prefix}hovered:not(:active):not(.#{$cls-prefix}active):not(.#{$cls-prefix}disabled) {
      color: var(--text-color-hover);
      background-color: rgba(var(--basis-rgb) / var(--alpha-base));
    }

    @each $intent in $intents {
      &.#{$cls-prefix}#{$intent} {
        color: var(--#{$intent});

        &.#{$cls-prefix}hoverable {
          &:not(.#{$cls-prefix}active):not(.#{$cls-prefix}disabled) {
            &:hover {
              background-color: rgba(var(--#{$intent}-rgb) / var(--alpha-base));
            }

            &:active {
              background-color: rgba(var(--#{$intent}-rgb) / var(--alpha-deep));
            }
          }
        }

        &.#{$cls-prefix}hovered:not(:active):not(.#{$cls-prefix}active):not(.#{$cls-prefix}disabled) {
          color: var(--#{$intent});
          background-color: rgba(var(--#{$intent}-rgb) / var(--alpha-base));
        }

        &.#{$cls-prefix}active {
          color: var(--#{$intent});
          background-color: rgba(var(--#{$intent}-rgb) / var(--alpha-deep));
        }

        &.#{$cls-prefix}disabled {
          color: var(--#{$intent});

          &.#{$cls-prefix}active {
            background-color: rgba(var(--#{$intent}-rgb) / var(--alpha-base));
          }
        }
      }
    }
  }
}
